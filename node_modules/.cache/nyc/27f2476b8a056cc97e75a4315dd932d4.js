var cov_z7ps9lz5s=function(){var path="/home/dev/auth-module/src/routers/auth_Routes.js",hash="20b3da75554c4d92dbd4a89d3280f550209fba8c",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/dev/auth-module/src/routers/auth_Routes.js",statementMap:{"0":{start:{line:2,column:16},end:{line:2,column:34}},"1":{start:{line:3,column:15},end:{line:3,column:50}},"2":{start:{line:6,column:23},end:{line:6,column:63}},"3":{start:{line:8,column:13},end:{line:8,column:29}},"4":{start:{line:10,column:0},end:{line:19,column:3}},"5":{start:{line:11,column:2},end:{line:18,column:3}},"6":{start:{line:12,column:18},end:{line:12,column:26}},"7":{start:{line:13,column:19},end:{line:13,column:58}},"8":{start:{line:14,column:4},end:{line:14,column:33}},"9":{start:{line:16,column:4},end:{line:16,column:23}},"10":{start:{line:17,column:4},end:{line:17,column:20}},"11":{start:{line:22,column:0},end:{line:32,column:3}},"12":{start:{line:23,column:2},end:{line:31,column:3}},"13":{start:{line:24,column:17},end:{line:24,column:25}},"14":{start:{line:25,column:4},end:{line:25,column:63}},"15":{start:{line:26,column:19},end:{line:26,column:60}},"16":{start:{line:27,column:4},end:{line:27,column:21}},"17":{start:{line:29,column:4},end:{line:29,column:23}},"18":{start:{line:30,column:4},end:{line:30,column:20}},"19":{start:{line:33,column:0},end:{line:33,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:23},end:{line:10,column:24}},loc:{start:{line:10,column:43},end:{line:19,column:1}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:22,column:20},end:{line:22,column:21}},loc:{start:{line:22,column:40},end:{line:32,column:1}},line:22}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},f:{"0":0,"1":0},b:{},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_z7ps9lz5s.s[0]++,require('express'));const logger=(cov_z7ps9lz5s.s[1]++,require('../common/winston_config'));const authController=(cov_z7ps9lz5s.s[2]++,require('../controller/auth_controller'));const auth=(cov_z7ps9lz5s.s[3]++,express.Router());cov_z7ps9lz5s.s[4]++;auth.post('/register',async(req,res)=>{cov_z7ps9lz5s.f[0]++;cov_z7ps9lz5s.s[5]++;try{const user=(cov_z7ps9lz5s.s[6]++,req.body);const result=(cov_z7ps9lz5s.s[7]++,await authController.registerUser(user));cov_z7ps9lz5s.s[8]++;res.status(200).send(result);}catch(error){cov_z7ps9lz5s.s[9]++;logger.info(error);cov_z7ps9lz5s.s[10]++;res.send(false);}});cov_z7ps9lz5s.s[11]++;auth.post('/login',async(req,res)=>{cov_z7ps9lz5s.f[1]++;cov_z7ps9lz5s.s[12]++;try{const user=(cov_z7ps9lz5s.s[13]++,req.body);cov_z7ps9lz5s.s[14]++;logger.info(`login request for ${user.username} recieved`);const result=(cov_z7ps9lz5s.s[15]++,await authController.userValidation(user));cov_z7ps9lz5s.s[16]++;res.send(result);}catch(error){cov_z7ps9lz5s.s[17]++;logger.info(error);cov_z7ps9lz5s.s[18]++;res.send(false);}});cov_z7ps9lz5s.s[19]++;module.exports=auth;