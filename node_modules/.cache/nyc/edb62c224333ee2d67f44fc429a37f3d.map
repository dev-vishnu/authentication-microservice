{"version":3,"sources":["auth_Routes.js"],"names":["auth","post","req","res","user","body","token","result","status","send","winston","logger","info","sendStatus","username"],"mappings":";;;;;;AACA;;AACA;;;;AAGA;;AACA;;;;;;;;AAEA,IAAMA,OAAO,sBAAb;;AAEAA,KAAKC,IAAL,CAAU,WAAV;AAAA,qEAAuB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,gBADe,GACPF,IAAIG,IADG;AAAA;AAAA,mBAEX,2BAAYD,KAAKE,KAAjB,CAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAII,mCAAaF,IAAb,CAJJ;;AAAA;AAIXG,kBAJW;;AAKjBJ,gBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAArB;AALiB;AAAA;;AAAA;AAAA;AAAA;;AAOjBG,qCAAQC,MAAR,CAAeC,IAAf;AACAT,gBAAIM,IAAJ,CAAS,KAAT;;AARiB;AAAA;AAAA;;AAAA;AAWnBN,gBAAIU,UAAJ,CAAe,GAAf;;AAXmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAgBAb,KAAKC,IAAL,CAAU,QAAV;AAAA,sEAAoB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,gBADY,GACLF,IAAIG,IADC;AAAA;AAAA,mBAER,2BAAYD,KAAKE,KAAjB,CAFQ;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAIdI,qCAAQC,MAAR,CAAeC,IAAf,wBAAyCR,KAAKU,QAA9C;AAJc;AAAA,mBAKO,qCAAeV,IAAf,CALP;;AAAA;AAKRG,kBALQ;;AAMdJ,gBAAIM,IAAJ,CAASF,MAAT;AANc;AAAA;;AAAA;AAAA;AAAA;;AAQdG,qCAAQC,MAAR,CAAeC,IAAf;AACAT,gBAAIM,IAAJ,CAAS,KAAT;;AATc;AAAA;AAAA;;AAAA;AAYhBN,gBAAIU,UAAJ,CAAe,GAAf;;AAZgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA;kBAeeb,I","file":"auth_Routes.js","sourceRoot":"/home/dev/auth-module/src/routers","sourcesContent":["\nimport { Router } from 'express';\nimport winston from '../common/winston_config';\n\n\nimport { registerUser, userValidation } from '../controller/auth_controller';\nimport verifytoken from '../token/tokenVerify';\n\nconst auth = Router();\n\nauth.post('/register', async (req, res) => {\n  const user = (req.body);\n  if (await verifytoken(user.token)) {\n    try {\n      const result = await registerUser(user);\n      res.status(200).send(result);\n    } catch (error) {\n      winston.logger.info(error);\n      res.send(false);\n    }\n  } else {\n    res.sendStatus(401);\n  }\n});\n\n\nauth.post('/login', async (req, res) => {\n  const user = req.body;\n  if (await verifytoken(user.token)) {\n    try {\n      winston.logger.info(`login request for ${user.username} recieved`);\n      const result = await userValidation(user);\n      res.send(result);\n    } catch (error) {\n      winston.logger.info(error);\n      res.send(false);\n    }\n  } else {\n    res.sendStatus(401);\n  }\n});\nexport default auth;\n"]}